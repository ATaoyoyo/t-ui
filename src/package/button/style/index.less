@import url('@style/common.less');
@import url('@style/theme.less');

@types: {
  default: @default;
  primary: @primary;
  success: @success;
  warning: @warning;
  error: @error;
};

@sizeTypes: {
  middle: 32px;
  small: 28px;
  mini: 24px;
};

button {
  padding: 0 14px;
  height: 34px;
  line-height: 1;
  text-align: center;
  border: 1px solid #f1f1f1;
  outline: none;
  background-color: #fff;
  box-sizing: border-box;
  border-radius: 3px;
  cursor: pointer;
}

.t-button {
  box-sizing: border-box;
  transition: all 0.3s;

  each(@types, {
      &.is-@{key} {
        color: if((@key =default) or (@key=text), @text-black, @text-white);
        background-color: if(@key =text, @text-white, @value);
        border: 1px solid if(@key =default, @text-border, @value);
        border-width: if(@key =text, 0, 1px);

        &:hover,
        &:focus {
          color: if(@key =default, @primary, @text-white);
          border: 1px solid if(@key =default, @primary, tint(@value, 10%));
          background-color: tint(@value, 10%);
        }

        &.is-plain {
          @plainValue: tint(@value, 60%);
          color: if(@key =default, @text-black, @value);
          background-color: @plainValue;
          border: 1px solid if(@key=default, @text-border, @plainValue);

          &:hover,
          &:focus {
            @selectValue: @plainValue;
            // color: if(@key =default, @primary, @text-white);
            background-color: tint(@selectValue, 10%);
            border: 1px solid if(@key=default, @primary, tint(@selectValue, 10%));
          }
        }

        &.is-dashed {
          color: if(@key =default, @text-black, @value);
          background-color: @default;
          border: 1px dashed if(@key=default, @text-border, @value);

          &:hover,
          &:focus {
            @selectValue: tint(@value, 30%);
            color: if(@key =default, @primary, @selectValue);
            background-color: @default;
            border: 1px dashed if(@key=default, @primary, tint(@selectValue, 10%));
          }
        }

        &.is-disabled {
          color: @text-gray;
          background-color: @disabled;
          border-color: @text-border;
          cursor: not-allowed;

          &:hover, &:focus {
            color: @text-gray;
            background-color: @disabled;
            border-color: @text-border;
            cursor: not-allowed;
          }
        }

        &.is-round {
          border-radius: 20px
        }

        &.is-circle {
          padding: 0;
          width: 34px;
          height: 34px;
          border-radius: 50%;

          each(@sizeTypes, {
            &.is-@{key} {
              width: @value;
              height: @value;
              list-style: @value;
              text-align: center;
              font-size: if(@key=mini,  @font-mini, @font-base);
            }
          })
        }

      }

      each(@sizeTypes, {
        &.is-@{key} {
          height: @value;
          font-size: if(@key=mini,  @font-mini, @font-base);
        }
      })

      &.is-text {
        &.is-@{key} {
          color: if(@key=default, @primary, @value);
          background-color: @text-white;
          border: none;

        &:hover,
        &:focus{
          color: tint(if(@key=default, @primary, @value), 20%);
          background-color: transparent;
          border: none;
        }

        &.is-disabled {
          color: @text-gray;
          cursor: not-allowed;
          }
        }
      }
    }

  );
}
