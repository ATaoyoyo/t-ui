@import '../../../theme/index.less';
@import './mixin.less';

.t-button {
  .btn();

  &__icon {
    text-align: center;
  }

  &__content {
    display        : flex;
    align-items    : center;
    justify-content: center;
  }

  &.is-round {
    .btn-round(@height-base);
  }

  &.is-circle {
    width        : @height-base;
    height       : @height-base;
    text-align   : center;
    border-radius: 50%;
  }

  &.is-default {
    .button-size(@height-base; @btn-padding-x-base; @btn-padding-y-base; @font-size-base; @border-radius-base);
  }

  &.is-medium {
    .button-size(@height-medium; @btn-padding-x-base;
      @btn-padding-y-base;
      @font-size-base;
      @border-radius-base);
  }

  &.is-small {

    .button-size(@height-small; @btn-padding-x-sm;
      @btn-padding-y-sm;
      @font-size-base;
      @border-radius-base);
    font-size: 14px;
  }

  &.is-mini {

    .button-size(@height-mini; @btn-padding-x-sm;
      @btn-padding-y-sm;
      @font-size-base;
      @border-radius-base);

    font-size: 12px;
  }

  &.is-disabled {
    cursor: not-allowed;
  }

  &.is-default {
    .btn-types(@baseTextBlackColor, @defaultColor, @border-color-gray, @primaryColor, @defaultColor, @primaryColor);

    &.is-plain {
      .btn-types(@baseTextBlackColor, @defaultColorPlain, @border-color-gray, @primaryColor, @defaultColor, @primaryColorPlain);
    }

    &.is-dashed {
      .btn-dashed(@baseTextBlackColor, @border-color-gray, @primaryColorHover);
    }

    &.is-disabled {
      @disabledColor: tint(#f1f1f1, 80%);

      .btn-types(@text-black-100, @disabledColor, @border-color-gray, @text-black-100, @disabledColor, @border-color-gray);
    }
  }

  &.is-primary {
    .btn-types(@baseTextWhiteColor, @primaryColor, @primaryColor, @baseTextWhiteColor, @primaryColorHover, @primaryColorHover);

    &.is-plain {
      .btn-types(@primaryColor, @primaryColorPlain, @primaryColorPlain, @baseTextWhiteColor, @primaryColor, @primaryColor);
    }

    &.is-dashed {
      .btn-dashed(@primaryColor, @primaryColor, @primaryColorHover);
    }

    &.is-disabled {
      @disabledColor: mix(@primaryColor, #fff, 30%);

      .btn-types(@text-white-100, @disabledColor, @disabledColor, @text-white-100, @disabledColor, @disabledColor);
    }

    &.is-text {
      .btn-text(@primaryColor, @primaryColorHover)
    }
  }

  &.is-info {
    .btn-types(@baseTextWhiteColor, @infoColor, @infoColor, @baseTextWhiteColor, @infoColorHover, @infoColorHover);

    &.is-plain {
      .btn-types(@infoColor, @infoColorPlain, @infoColorPlain, @baseTextWhiteColor, @infoColor, @infoColor);
    }

    &.is-dashed {
      .btn-dashed(@infoColor, @infoColor, @infoColorHover);
    }

    &.is-disabled {
      @disabledColor: mix(@infoColor, #fff, 30%);

      .btn-types(@text-white-100, @disabledColor, @disabledColor, @text-white-100, @disabledColor, @disabledColor);
    }

    &.is-text {
      .btn-text(@infoColor, @infoColorHover)
    }
  }

  &.is-success {
    .btn-types(@baseTextWhiteColor, @successColor, @successColor, @baseTextWhiteColor, @successColorHover, @successColorHover);

    &.is-plain {
      .btn-types(@successColor, @successColorPlain, @successColorPlain, @baseTextWhiteColor, @successColor, @successColor);
    }

    &.is-dashed {
      .btn-dashed(@successColor, @successColor, @successColorHover);
    }

    &.is-disabled {
      @disabledColor: mix(@successColor, #fff, 30%);

      .btn-types(@text-white-100, @disabledColor, @disabledColor, @text-white-100, @disabledColor, @disabledColor);
    }

    &.is-text {
      .btn-text(@successColor, @successColorHover)
    }
  }

  &.is-warning {
    .btn-types(@baseTextWhiteColor, @warningColor, @warningColor, @baseTextWhiteColor, @warningColorHover, @warningColorHover);

    &.is-plain {
      .btn-types(@warningColor, @warningColorPlain, @warningColorPlain, @baseTextWhiteColor, @warningColor, @warningColor);
    }

    &.is-dashed {
      .btn-dashed(@warningColor, @warningColor, @warningColorHover);
    }

    &.is-disabled {
      @disabledColor: mix(@warningColor, #fff, 30%);

      .btn-types(@text-white-100, @disabledColor, @disabledColor, @text-white-100, @disabledColor, @disabledColor);
    }

    &.is-text {
      .btn-text(@warningColor, @warningColorHover)
    }
  }

  &.is-error {
    .btn-types(@baseTextWhiteColor, @errorColor, @errorColor, @baseTextWhiteColor, @errorColorHover, @errorColorHover);

    &.is-plain {
      .btn-types(@errorColor, @errorColorPlain, @errorColorPlain, @baseTextWhiteColor, @errorColor, @errorColor);
    }

    &.is-dashed {
      .btn-dashed(@errorColor, @errorColor, @errorColorHover);
    }

    &.is-disabled {
      @disabledColor: mix(@errorColor, #fff, 30%);

      .btn-types(@text-white-100, @disabledColor, @disabledColor, @text-white-100, @disabledColor, @disabledColor);
    }

    &.is-text {
      .btn-text(@errorColor, @errorColorHover)
    }
  }

  &.is-text {
    .btn-text(@baseTextBlackColor, @primaryColorHover)
  }
}